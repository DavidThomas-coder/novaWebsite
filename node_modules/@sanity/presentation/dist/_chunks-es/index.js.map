{"version":3,"file":"index.js","sources":["../../src/constants.ts","../../src/util/props.ts","../../src/useDocumentLocations.ts","../../src/i18n/index.ts","../../src/PresentationContext.ts","../../src/usePresentationTool.ts","../../src/document/LocationsBanner.tsx","../../src/document/useCurrentPresentationToolName.ts","../../src/document/PresentationDocumentContext.ts","../../src/document/PresentationDocumentHeader.tsx","../../src/document/PresentationDocumentProvider.tsx","../../src/fieldActions/openInStructure.ts","../../src/getIntentState.ts","../../src/router.ts","../../src/plugin.tsx","../../src/PresentationNavigateContext.ts","../../src/usePresentationNavigate.ts","../../src/PresentationParamsContext.ts","../../src/usePresentationParams.ts"],"sourcesContent":["import {ComposeIcon} from '@sanity/icons'\n\nexport const DEFAULT_TOOL_ICON = ComposeIcon\nexport const DEFAULT_TOOL_NAME = 'presentation'\nexport const DEFAULT_TOOL_TITLE = 'Presentation'\n\n// @todo import from core sanity package\nexport const COMMENTS_INSPECTOR_NAME = 'sanity/structure/comments'\n\nexport const EDIT_INTENT_MODE = 'presentation'\n\n// How long we wait until an iframe is loaded until we consider it to be slow and possibly failed\nexport const MAX_TIME_TO_OVERLAYS_CONNECTION = 3000 // ms\n\n// The API version to use when using `@sanity/client`\nexport const API_VERSION = '2023-10-16'\n\n// Heartbeats shouldn't fire on intervals that are so short it causes performance issues\nexport const MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL = 1000 // ms\n\n// Batch size for fetching documents building up the cache\nexport const LIVE_QUERY_CACHE_BATCH_SIZE = 100\n\n// Total cache size for documents that are live queried\nexport const LIVE_QUERY_CACHE_SIZE = 2048\n","import {\n  combineLatest,\n  from,\n  isObservable,\n  map,\n  mergeAll,\n  Observable,\n  of,\n  scan,\n  switchMap,\n} from 'rxjs'\n\ntype Props<K extends keyof any, T> = {\n  [P in K]: T | Observable<T>\n}\n\nfunction keysOf<T extends object>(value: T) {\n  return Object.keys(value) as (keyof T)[]\n}\n\nfunction setKey(source: Record<string, unknown>, key: any, value: unknown) {\n  return {\n    ...source,\n    [key]: value,\n  }\n}\n\nexport function props<K extends keyof any, T>(options: {wait?: boolean} = {}) {\n  return (source: Observable<Props<K, T>>): Observable<Record<string, unknown>> => {\n    return new Observable<Props<K, T>>((observer) => source.subscribe(observer)).pipe(\n      switchMap((object) => {\n        const keyObservables = keysOf(object).map((key) => {\n          const value = object[key]\n          return isObservable(value) ? from(value).pipe(map((val) => [key, val])) : of([key, value])\n        })\n\n        return options.wait\n          ? combineLatest(keyObservables).pipe(\n              map((pairs) => pairs.reduce((acc, [key, value]) => setKey(acc, key, value), {})),\n            )\n          : from(keyObservables).pipe(\n              mergeAll(),\n              scan((acc, [key, value]) => setKey(acc, key, value), {}),\n            )\n      }),\n    )\n  }\n}\n","import get from 'lodash.get'\nimport {useEffect, useMemo, useState} from 'react'\nimport {isObservable, map, Observable, of, switchMap} from 'rxjs'\n\nimport {\n  type DocumentStore,\n  isRecord,\n  isReference,\n  type Previewable,\n  type SanityDocument,\n  useDocumentStore,\n} from './internals'\nimport type {\n  DocumentLocationResolver,\n  DocumentLocationResolverObject,\n  DocumentLocationResolvers,\n  DocumentLocationsState,\n  DocumentLocationsStatus,\n} from './types'\nimport {props} from './util/props'\n\nconst INITIAL_STATE: DocumentLocationsState = {locations: []}\n\nfunction getDocumentId(value: Previewable) {\n  if (isReference(value)) {\n    return value._ref\n  }\n  return '_id' in value ? value._id : undefined\n}\n\nfunction cleanPreviewable(id: string | undefined, previewable: Previewable) {\n  const clean: Record<string, unknown> = id ? {...previewable, _id: id} : {...previewable}\n\n  if (clean['_type'] === 'reference') {\n    delete clean['_type']\n    delete clean['_ref']\n    delete clean['_weak']\n    delete clean['_dataset']\n    delete clean['_projectId']\n    delete clean['_strengthenOnPublish']\n  }\n\n  return clean\n}\n\nfunction listen(id: string, fields: string[], store: DocumentStore) {\n  const projection = fields.join(', ')\n  const query = `*[_id==$id][0]{${projection}}`\n  const params = {id}\n  return store.listenQuery(query, params, {\n    perspective: 'previewDrafts',\n  }) as Observable<SanityDocument | null>\n}\n\nfunction observeDocument(\n  value: Previewable | null,\n  paths: string[][],\n  store: DocumentStore,\n): Observable<Record<string, unknown> | null> {\n  if (!value || typeof value !== 'object') {\n    return of(value)\n  }\n\n  const id = getDocumentId(value)\n  const currentValue = cleanPreviewable(id, value)\n\n  const headlessPaths = paths.filter((path) => !(path[0] in currentValue))\n\n  if (id && headlessPaths.length) {\n    const fields = [...new Set(headlessPaths.map((path: string[]) => path[0]))]\n    return listen(id, fields, store).pipe(\n      switchMap((snapshot) => {\n        if (snapshot) {\n          return observeDocument(snapshot, paths, store)\n        }\n        return of(null)\n      }),\n    )\n  }\n\n  const leads: Record<string, string[][]> = {}\n  paths.forEach((path) => {\n    const [head, ...tail] = path\n    if (!leads[head]) {\n      leads[head] = []\n    }\n    leads[head].push(tail)\n  })\n  const next = Object.keys(leads).reduce((res: Record<string, unknown>, head) => {\n    const tails = leads[head].filter((tail) => tail.length > 0)\n    if (tails.length === 0) {\n      res[head] = isRecord(value) ? (value as Record<string, unknown>)[head] : undefined\n    } else {\n      res[head] = observeDocument((value as any)[head], tails, store)\n    }\n    return res\n  }, currentValue)\n\n  return of(next).pipe(props({wait: true}))\n}\n\nfunction observeForLocations(\n  doc: {id: string; type: string},\n  resolver:\n    | DocumentLocationsState\n    | DocumentLocationResolver\n    | DocumentLocationResolverObject<string>\n    | undefined,\n  documentStore: DocumentStore,\n) {\n  if (!resolver) return of(undefined)\n  const {id, type} = doc\n  // Original/advanced resolver which requires explicit use of Observables\n  if (typeof resolver === 'function') {\n    const params = {id, type}\n\n    const context = {documentStore}\n    const _result = resolver(params, context)\n    return isObservable(_result) ? _result : of(_result)\n  }\n\n  // Simplified resolver pattern which abstracts away Observable logic\n  if ('select' in resolver && 'resolve' in resolver) {\n    const {select} = resolver\n    const paths = Object.values(select).map((value) => String(value).split('.')) || []\n    const doc = {_type: 'reference', _ref: id}\n    return observeDocument(doc, paths, documentStore).pipe(\n      map((doc) => {\n        return Object.keys(select).reduce<Record<string, unknown>>((acc, key) => {\n          acc[key] = get(doc, select[key])\n          return acc\n        }, {})\n      }),\n      map(resolver.resolve),\n    )\n  }\n\n  // Resolver is explicitly provided state\n  return of(resolver)\n}\n\nexport function useDocumentLocations(props: {\n  id: string\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  type: string\n}): {\n  state: DocumentLocationsState\n  status: DocumentLocationsStatus\n} {\n  const {id, resolvers, type} = props\n  const documentStore = useDocumentStore()\n  const [locationsState, setLocationsState] = useState<DocumentLocationsState>(INITIAL_STATE)\n\n  const resolver = resolvers && (typeof resolvers === 'function' ? resolvers : resolvers[type])\n\n  const [locationsStatus, setLocationsStatus] = useState<DocumentLocationsStatus>(\n    resolver ? 'resolving' : 'empty',\n  )\n\n  const result = useMemo(() => {\n    if (!resolver) return undefined\n\n    // Original/advanced resolver which requires explicit use of Observables\n    if (typeof resolver === 'function') {\n      const params = {id, type}\n      const context = {documentStore}\n      const _result = resolver(params, context)\n      return isObservable(_result) ? _result : of(_result)\n    }\n\n    // Simplified resolver pattern which abstracts away Observable logic\n    if ('select' in resolver && 'resolve' in resolver) {\n      return observeForLocations({id, type}, resolver, documentStore)\n    }\n\n    // Resolver is explicitly provided state\n    return of(resolver)\n  }, [documentStore, id, resolver, type])\n\n  useEffect(() => {\n    const sub = result?.subscribe((state) => {\n      setLocationsState(state || INITIAL_STATE)\n      setLocationsStatus(state ? 'resolved' : 'empty')\n    })\n\n    return () => sub?.unsubscribe()\n  }, [result])\n\n  return {\n    state: locationsState,\n    status: locationsStatus,\n  }\n}\n","import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the presentation tool\n *\n * @public\n */\nexport const presentationLocaleNamespace = 'presentation' as const\n\n/**\n * The default locale bundle for the presentation tool, which is US English.\n *\n * @internal\n */\nexport const presentationUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: presentationLocaleNamespace,\n  resources: () => import('./resources'),\n})\n","import {createContext} from 'react'\n\nimport type {\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContextValue {\n  devMode: boolean\n  name: string\n  navigate: PresentationNavigate\n  params: PresentationParams\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}\n\nexport const PresentationContext = createContext<PresentationContextValue | null>(null)\n","import {useContext} from 'react'\n\nimport {PresentationContext, type PresentationContextValue} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","import {\n  ChevronRightIcon,\n  DesktopIcon,\n  ErrorOutlineIcon,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  createElement,\n  type ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from 'react'\nimport {type ObjectSchemaType, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME, DEFAULT_TOOL_TITLE} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationContext} from '../PresentationContext'\nimport type {DocumentLocation, DocumentLocationsState, PresentationPluginOptions} from '../types'\nimport {useCurrentPresentationToolName} from './useCurrentPresentationToolName'\n\nconst TONE_ICONS: Record<'positive' | 'caution' | 'critical', ComponentType> = {\n  positive: InfoOutlineIcon,\n  caution: WarningOutlineIcon,\n  critical: ErrorOutlineIcon,\n}\n\nexport function LocationsBanner(props: {\n  documentId: string\n  isResolving: boolean\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n  showPresentationTitle: boolean\n  state: DocumentLocationsState\n}): ReactNode {\n  const {documentId, isResolving, options, schemaType, showPresentationTitle} = props\n  const {locations, message, tone} = props.state\n  const len = locations?.length || 0\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const presentation = useContext(PresentationContext)\n  const [expanded, setExpanded] = useState(false)\n  const toggle = useCallback(() => {\n    if (!len) return\n    setExpanded((v) => !v)\n  }, [len])\n\n  const title = isResolving\n    ? t('locations-banner.resolving.text')\n    : message || t('locations-banner.locations-count', {count: len})\n\n  return (\n    <Card padding={1} radius={2} border tone={tone}>\n      <div style={{margin: -1}}>\n        {!locations && (\n          <Flex align=\"flex-start\" gap={3} padding={3}>\n            {tone && (\n              <Box flex=\"none\">\n                <Text size={1}>{createElement(TONE_ICONS[tone])}</Text>\n              </Box>\n            )}\n            <Box flex={1}>\n              <Text size={1} weight=\"medium\">\n                {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                {title}\n              </Text>\n            </Box>\n          </Flex>\n        )}\n        {locations && (\n          <>\n            <Card\n              as={len ? 'button' : undefined}\n              onClick={toggle}\n              padding={3}\n              radius={1}\n              tone=\"inherit\"\n            >\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  {isResolving ? (\n                    <Spinner size={1} />\n                  ) : (\n                    <Text size={1}>\n                      {len === 0 ? (\n                        <InfoOutlineIcon />\n                      ) : (\n                        <ChevronRightIcon\n                          style={{\n                            transform: `rotate(${expanded ? '90deg' : 0})`,\n                            transition: 'transform 100ms ease-in-out',\n                          }}\n                        />\n                      )}\n                    </Text>\n                  )}\n                </Box>\n                <Box flex={1}>\n                  <Text size={1} weight=\"medium\">\n                    {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                    {title}\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n            <Stack hidden={!expanded} marginTop={1} space={1}>\n              {locations.map((l, index) => (\n                <LocationItem\n                  active={\n                    (options.name || DEFAULT_TOOL_NAME) === presentation?.name &&\n                    l.href === presentation?.params.preview\n                  }\n                  documentId={documentId}\n                  documentType={schemaType.name}\n                  key={index}\n                  node={l}\n                  toolName={options.name || DEFAULT_TOOL_NAME}\n                />\n              ))}\n            </Stack>\n          </>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nfunction LocationItem(props: {\n  active: boolean\n  documentId: string\n  documentType: string\n  node: DocumentLocation\n  toolName: string\n}) {\n  const {documentId, documentType, node, active, toolName} = props\n  const presentation = useContext(PresentationContext)\n  const currentPresentationToolName = useCurrentPresentationToolName()\n  const isCurrentTool = toolName === currentPresentationToolName\n  const navigate = presentation?.navigate\n\n  const presentationLinkProps = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: documentId,\n      type: documentType,\n      mode: 'presentation',\n      presentation: toolName,\n      ...presentation?.structureParams,\n      preview: node.href,\n    },\n  })\n\n  const handleCurrentToolClick = useCallback(() => {\n    navigate?.({}, {preview: node.href})\n  }, [node.href, navigate])\n\n  return (\n    <Card\n      {...(isCurrentTool ? {} : presentationLinkProps)}\n      as=\"a\"\n      key={node.href}\n      onClick={isCurrentTool ? handleCurrentToolClick : presentationLinkProps.onClick}\n      padding={3}\n      radius={1}\n      pressed={active}\n      tone=\"inherit\"\n    >\n      <Flex gap={3}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <DesktopIcon />\n          </Text>\n        </Box>\n        <Stack flex={1} space={2}>\n          <Text size={1} weight=\"medium\">\n            {node.title}\n          </Text>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {node.href}\n          </Text>\n        </Stack>\n      </Flex>\n    </Card>\n  )\n}\n","import {usePresentationTool} from '../usePresentationTool'\n\nexport function useCurrentPresentationToolName(): string | undefined {\n  try {\n    return usePresentationTool().name\n  } catch {\n    return undefined\n  }\n}\n","import {createContext} from 'react'\n\nimport type {PresentationDocumentContextValue} from './types'\n\nexport const PresentationDocumentContext = createContext<PresentationDocumentContextValue | null>(\n  null,\n)\n","import {rem, Stack} from '@sanity/ui'\nimport {type ReactNode, useContext} from 'react'\nimport {type ObjectSchemaType} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type PublishedId} from '../internals'\nimport type {PresentationPluginOptions} from '../types'\nimport {useDocumentLocations} from '../useDocumentLocations'\nimport {LocationsBanner} from './LocationsBanner'\nimport {PresentationDocumentContext} from './PresentationDocumentContext'\n\nconst LocationStack = styled(Stack)`\n  min-height: ${rem(42)};\n\n  & + &:empty {\n    display: none;\n  }\n`\n\nexport function PresentationDocumentHeader(props: {\n  documentId: PublishedId\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n}): ReactNode {\n  const {documentId, options, schemaType} = props\n\n  const context = useContext(PresentationDocumentContext)\n  const {state, status} = useDocumentLocations({\n    id: documentId,\n    resolvers: options.resolve?.locations || options.locate,\n    type: schemaType.name,\n  })\n\n  if ((context && context.options[0] !== options) || status === 'empty') {\n    return null\n  }\n\n  const contextOptions = context?.options || []\n\n  return (\n    <LocationStack marginBottom={5} space={5}>\n      <Stack space={2}>\n        {contextOptions.map((options, idx) => (\n          <LocationsBanner\n            documentId={documentId}\n            isResolving={status === 'resolving'}\n            key={idx}\n            options={options}\n            schemaType={schemaType}\n            showPresentationTitle={contextOptions.length > 1}\n            state={state}\n          />\n        ))}\n      </Stack>\n    </LocationStack>\n  )\n}\n","import {\n  type ReactElement,\n  type ReactNode,\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport type {PresentationPluginOptions} from '../types'\nimport {PresentationDocumentContext} from './PresentationDocumentContext'\nimport type {PresentationDocumentContextValue} from './types'\n\n/** @internal */\nexport function PresentationDocumentProvider(props: {\n  children?: ReactNode\n  options: PresentationPluginOptions\n}): ReactElement {\n  const {children, options} = props\n  const parent = useContext(PresentationDocumentContext)\n  const parentRegister = parent?.register\n\n  const [optionsArray, setOptionsArray] = useState<PresentationPluginOptions[]>(() => [])\n\n  const register = useCallback(\n    (options: PresentationPluginOptions) => {\n      if (parentRegister) {\n        return parentRegister(options)\n      }\n\n      setOptionsArray((prev) => [options].concat(prev))\n\n      return () => {\n        setOptionsArray((prev) => prev.filter((o) => o !== options))\n      }\n    },\n    [parentRegister],\n  )\n\n  const registerRef = useRef(register)\n  registerRef.current = register\n\n  const context: PresentationDocumentContextValue = useMemo(\n    () => ({\n      options: parent?.options || optionsArray,\n      register,\n    }),\n    [optionsArray, parent, register],\n  )\n\n  useLayoutEffect(() => registerRef.current(options), [options])\n\n  return (\n    <PresentationDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDocumentContext.Provider>\n  )\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {useContext, useMemo} from 'react'\nimport {type Tool} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  defineDocumentFieldAction,\n  type DocumentFieldActionItem,\n  isRecord,\n  pathToString,\n  useWorkspace,\n} from '../internals'\nimport {PresentationContext} from '../PresentationContext'\n\nexport const openInStructure = defineDocumentFieldAction({\n  name: 'presentation/openInStructure',\n  useAction({documentId, documentType, path}) {\n    const workspace = useWorkspace()\n    const {navigateIntent} = useRouter()\n    const presentation = useContext(PresentationContext)\n\n    const defaultStructureTool = useMemo(\n      () => findStructureTool(workspace.tools, documentId, documentType),\n      [documentId, documentType, workspace.tools],\n    )\n\n    return {\n      type: 'action',\n      hidden: !presentation || path.length > 0 || !defaultStructureTool,\n      icon: defaultStructureTool?.icon || MasterDetailIcon,\n      title: `Open in ${defaultStructureTool?.title || 'Structure'}`,\n      onAction() {\n        navigateIntent('edit', {\n          id: documentId,\n          type: documentType,\n          mode: 'structure',\n          path: pathToString(path),\n        })\n      },\n      renderAsButton: true,\n    } satisfies DocumentFieldActionItem\n  },\n})\n\nfunction findStructureTool(\n  tools: Tool[],\n  documentId: string,\n  documentType: string,\n): Tool | undefined {\n  const results = tools.map((t) => {\n    const match = t.canHandleIntent?.(\n      'edit',\n      {\n        id: documentId,\n        type: documentType,\n        mode: 'structure',\n      },\n      {},\n    )\n\n    return {tool: t, match}\n  })\n\n  const modeMatches = results.filter((t) => isRecord(t.match) && t.match['mode'])\n\n  if (modeMatches.length > 0) {\n    return modeMatches[0].tool\n  }\n\n  const matches = results.filter((t) => t.match)\n\n  return matches[0]?.tool\n}\n","import {uuid} from '@sanity/uuid'\nimport {type SearchParam} from 'sanity/router'\n\nimport {encodeJsonParams, getPublishedId} from './internals'\nimport type {PresentationStateParams} from './types'\n\n/**\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  _routerState: undefined,\n  payload: unknown,\n):\n  | (PresentationStateParams & {_searchParams: SearchParam[]})\n  | {intent: string; params: Record<string, string>; payload: unknown} {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {id, mode, path, presentation, type, ...searchParams} = params\n\n  if (intent === 'edit' && id) {\n    return {\n      type: type || '*',\n      id: getPublishedId(id),\n      path,\n      _searchParams: Object.entries(searchParams),\n    }\n  }\n\n  if (intent === 'create') {\n    searchParams['preview'] =\n      searchParams['preview'] || new URLSearchParams(window.location.search).get('preview') || '/'\n\n    if (payload && typeof payload === 'object') {\n      searchParams['templateParams'] = encodeJsonParams(payload as Record<string, unknown>)\n    }\n\n    return {\n      type: type || '*',\n      id: id || uuid(),\n      _searchParams: Object.entries(searchParams),\n    }\n  }\n  return {intent, params, payload}\n}\n","import {route} from 'sanity/router'\n\nexport const router = route.create('/', {__unsafe_disableScopedSearchParams: true}, [\n  route.intents('/intent'),\n  route.create(':type', [route.create(':id', [route.create(':path')])]),\n])\n","import type {SanityDocument} from '@sanity/client'\nimport {lazy, Suspense} from 'react'\nimport {definePlugin, type InputProps, isDocumentSchemaType} from 'sanity'\n\nimport {DEFAULT_TOOL_ICON, DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport {PresentationDocumentHeader} from './document/PresentationDocumentHeader'\nimport {PresentationDocumentProvider} from './document/PresentationDocumentProvider'\nimport {openInStructure} from './fieldActions/openInStructure'\nimport {getIntentState} from './getIntentState'\nimport {presentationUsEnglishLocaleBundle} from './i18n'\nimport {getPublishedId} from './internals'\nimport {router} from './router'\nimport type {\n  DocumentLocationResolverObject,\n  DocumentLocationsState,\n  DocumentResolver,\n  PresentationPluginOptions,\n} from './types'\n\nconst PresentationTool = lazy(() => import('./PresentationTool'))\nconst BroadcastDisplayedDocument = lazy(() => import('./loader/BroadcastDisplayedDocument'))\n\n/**\n * Define locations for a given document type.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolver - resolver that return locations for a document.\n * @public\n */\nexport function defineLocations<K extends string>(\n  resolver: DocumentLocationResolverObject<K> | DocumentLocationsState,\n): typeof resolver {\n  return resolver\n}\n\n/**\n * Define documents for a given location.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolvers - resolvers that return documents.\n * @public\n */\nexport function defineDocuments(resolvers: DocumentResolver[]): typeof resolvers {\n  return resolvers\n}\n\nexport const presentationTool = definePlugin<PresentationPluginOptions>((options) => {\n  const toolName = options.name || DEFAULT_TOOL_NAME\n\n  if ('locate' in options) {\n    // eslint-disable-next-line no-console\n    console.warn('Presentation’s `locate` option is deprecated. Use `resolve.locations` instead.')\n  }\n\n  const hasLocationsResolver = !!(options.resolve?.locations || options.locate)\n\n  function PresentationDocumentInput(props: InputProps) {\n    const value = props.value as SanityDocument\n    const documentId = value?._id ? getPublishedId(value?._id) : undefined\n\n    if (isDocumentSchemaType(props.schemaType)) {\n      return (\n        <PresentationDocumentProvider options={options}>\n          {hasLocationsResolver && documentId && (\n            <PresentationDocumentHeader\n              documentId={documentId}\n              options={options}\n              schemaType={props.schemaType}\n            />\n          )}\n          {props.renderDefault(props)}\n          <Suspense key=\"broadcast-displayed-document\">\n            <BroadcastDisplayedDocument key={documentId} value={value} />\n          </Suspense>\n        </PresentationDocumentProvider>\n      )\n    }\n\n    return props.renderDefault(props)\n  }\n\n  function canHandleCreateIntent(params: Record<string, unknown>) {\n    // We can't handle create intents without a `type` parameter\n    if (!('type' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params['presentation'] !== toolName) {\n      return false\n    }\n\n    return 'template' in params ? {template: true} : true\n  }\n\n  function canHandleEditIntent(params: Record<string, unknown>) {\n    // We can't handle edit intents without `type` or `id` parameters\n    if (!('type' in params) || !('id' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params['presentation'] !== toolName) {\n      return false\n    }\n\n    return 'mode' in params ? {mode: params['mode'] === EDIT_INTENT_MODE} : true\n  }\n\n  return {\n    i18n: {\n      bundles: [presentationUsEnglishLocaleBundle],\n    },\n    document: {\n      unstable_fieldActions: (prev) => {\n        return [\n          ...prev.filter((a) => a.name !== openInStructure.name), // prevent duplication\n          openInStructure,\n        ]\n      },\n    },\n\n    form: {\n      components: {\n        input: PresentationDocumentInput,\n      },\n    },\n\n    tools: [\n      {\n        icon: options.icon || DEFAULT_TOOL_ICON,\n        name: toolName,\n        title: options.title,\n        component: PresentationTool,\n        options,\n        canHandleIntent(intent, params) {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        router,\n      },\n    ],\n  }\n})\n","import {createContext} from 'react'\n\nexport type PresentationNavigateContextValue = (\n  preview: string | undefined,\n  document?: {type: string; id: string},\n) => void\n\nexport const PresentationNavigateContext = createContext<PresentationNavigateContextValue | null>(\n  null,\n)\n","import {useContext} from 'react'\n\nimport {\n  PresentationNavigateContext,\n  type PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\n\nexport function usePresentationNavigate(): PresentationNavigateContextValue {\n  const navigate = useContext(PresentationNavigateContext)\n\n  if (!navigate) {\n    throw new Error('Presentation navigate context is missing')\n  }\n\n  return navigate\n}\n\nexport type {PresentationNavigateContextValue}\n","import {createContext} from 'react'\n\nimport type {PresentationParams} from './types'\n\nexport const PresentationParamsContext = createContext<PresentationParams | null>(null)\n","import {useContext} from 'react'\n\nimport {PresentationParamsContext} from './PresentationParamsContext'\nimport type {PresentationParams} from './types'\n\n/** @public */\nexport function usePresentationParams(throwOnMissingContext?: true): PresentationParams\n/** @public */\nexport function usePresentationParams(throwOnMissingContext: false): PresentationParams | null\n/** @public */\nexport function usePresentationParams(throwOnMissingContext = true): PresentationParams | null {\n  const params = useContext(PresentationParamsContext)\n\n  if (throwOnMissingContext && !params) {\n    throw new Error('Presentation params context is missing')\n  }\n\n  return params\n}\n"],"names":["DEFAULT_TOOL_ICON","ComposeIcon","DEFAULT_TOOL_NAME","DEFAULT_TOOL_TITLE","COMMENTS_INSPECTOR_NAME","EDIT_INTENT_MODE","MAX_TIME_TO_OVERLAYS_CONNECTION","API_VERSION","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","LIVE_QUERY_CACHE_BATCH_SIZE","LIVE_QUERY_CACHE_SIZE","setKey","source","key","value","props","options","Observable","observer","subscribe","pipe","switchMap","object","keyObservables","Object","keys","map","isObservable","from","val","of","wait","combineLatest","pairs","reduce","acc","mergeAll","scan","INITIAL_STATE","locations","observeDocument","paths","store","id","isReference","_ref","_id","getDocumentId","currentValue","previewable","clean","_type","_weak","_dataset","_projectId","_strengthenOnPublish","cleanPreviewable","headlessPaths","filter","path","length","fields","query","join","params","listenQuery","perspective","listen","Set","snapshot","leads","forEach","head","tail","push","next","res","tails","isRecord","useDocumentLocations","resolvers","type","documentStore","useDocumentStore","locationsState","setLocationsState","useState","resolver","locationsStatus","setLocationsStatus","result","useMemo","_result","doc","select","values","String","split","get","resolve","observeForLocations","useEffect","sub","state","unsubscribe","status","presentationLocaleNamespace","presentationUsEnglishLocaleBundle","defineLocaleResourceBundle","locale","namespace","resources","import","PresentationContext","createContext","usePresentationTool","presentation","useContext","Error","TONE_ICONS","positive","InfoOutlineIcon","caution","WarningOutlineIcon","critical","ErrorOutlineIcon","LocationsBanner","documentId","isResolving","schemaType","showPresentationTitle","message","tone","len","t","useTranslation","expanded","setExpanded","toggle","useCallback","v","title","count","Card","padding","radius","border","children","style","margin","Flex","align","gap","Box","flex","Text","size","createElement","jsx","jsxs","weight","Fragment","as","onClick","Spinner","ChevronRightIcon","transform","transition","Stack","hidden","marginTop","space","l","index","LocationItem","active","name","href","preview","documentType","node","toolName","isCurrentTool","useCurrentPresentationToolName","navigate","presentationLinkProps","useIntentLink","intent","mode","structureParams","handleCurrentToolClick","pressed","DesktopIcon","muted","textOverflow","PresentationDocumentContext","LocationStack","styled","rem","PresentationDocumentHeader","_a","context","locate","contextOptions","marginBottom","idx","PresentationDocumentProvider","parent","parentRegister","register","optionsArray","setOptionsArray","prev","concat","o","registerRef","useRef","current","useLayoutEffect","Provider","openInStructure","defineDocumentFieldAction","useAction","workspace","useWorkspace","navigateIntent","useRouter","defaultStructureTool","tools","results","tool","match","canHandleIntent","call","modeMatches","findStructureTool","icon","MasterDetailIcon","onAction","pathToString","renderAsButton","getIntentState","_routerState","payload","searchParams","getPublishedId","_searchParams","entries","URLSearchParams","window","location","search","templateParams","encodeJsonParams","uuid","router","route","create","__unsafe_disableScopedSearchParams","intents","PresentationTool","lazy","BroadcastDisplayedDocument","defineLocations","defineDocuments","presentationTool","definePlugin","console","warn","hasLocationsResolver","i18n","bundles","document","unstable_fieldActions","a","form","components","input","isDocumentSchemaType","renderDefault","Suspense","component","template","canHandleCreateIntent","canHandleEditIntent","PresentationNavigateContext","usePresentationNavigate","PresentationParamsContext","usePresentationParams","throwOnMissingContext"],"mappings":"0lCAEO,MAAMA,GAAoBC,EACpBC,GAAoB,eACpBC,GAAqB,eAGrBC,GAA0B,4BAE1BC,GAAmB,eAGnBC,GAAkC,IAGlCC,GAAc,aAGdC,GAA6C,IAG7CC,GAA8B,IAG9BC,GAAwB,KCJrC,SAASC,GAAOC,EAAiCC,EAAUC,GAClD,MAAA,IACFF,EACHC,CAACA,GAAMC,EAEX,CAEgB,SAAAC,GAA8BC,EAA4B,IACjE,OAACJ,GACC,IAAIK,GAAyBC,GAAaN,EAAOO,UAAUD,KAAWE,KAC3EC,GAAWC,IACT,MAAMC,GAfoBT,EAeIQ,EAd7BE,OAAOC,KAAKX,IAcyBY,KAAKb,IACnC,MAAAC,EAAQQ,EAAOT,GACd,OAAAc,EAAab,GAASc,EAAKd,GAAOM,KAAKM,GAAKG,GAAQ,CAAChB,EAAKgB,MAASC,EAAG,CAACjB,EAAKC,GAAM,IAjBnG,IAAkCA,EAoB1B,OAAOE,EAAQe,KACXC,EAAcT,GAAgBH,KAC5BM,GAAKO,GAAUA,EAAMC,QAAO,CAACC,GAAMtB,EAAKC,KAAWH,GAAOwB,EAAKtB,EAAKC,IAAQ,CAAA,MAE9Ec,EAAKL,GAAgBH,KACnBgB,IACAC,GAAK,CAACF,GAAMtB,EAAKC,KAAWH,GAAOwB,EAAKtB,EAAKC,IAAQ,CAAA,GAAE,IAKrE,CC1BA,MAAMwB,GAAwC,CAACC,UAAW,IAiC1D,SAASC,GACP1B,EACA2B,EACAC,GAEI,IAAC5B,GAA0B,iBAAVA,EACnB,OAAOgB,EAAGhB,GAGZ,MAAM6B,EAxCR,SAAuB7B,GACjB,OAAA8B,EAAY9B,GACPA,EAAM+B,KAER,QAAS/B,EAAQA,EAAMgC,SAAM,CACtC,CAmCaC,CAAcjC,GACnBkC,EAlCR,SAA0BL,EAAwBM,GAC1C,MAAAC,EAAiCP,EAAK,IAAIM,EAAaH,IAAKH,GAAM,IAAIM,GAExE,MAAmB,cAAnBC,EAAMC,eACDD,EAAMC,aACND,EAAML,YACNK,EAAME,aACNF,EAAMG,gBACNH,EAAMI,kBACNJ,EAAMK,sBAGRL,CACT,CAqBuBM,CAAiBb,EAAI7B,GAEpC2C,EAAgBhB,EAAMiB,QAAQC,KAAWA,EAAK,KAAMX,KAEtD,GAAAL,GAAMc,EAAcG,OAAQ,CAE9B,OAzBJ,SAAgBjB,EAAYkB,EAAkBnB,GAEtC,MAAAoB,EAAQ,kBADKD,EAAOE,KAAK,SAEzBC,EAAS,CAACrB,MACT,OAAAD,EAAMuB,YAAYH,EAAOE,EAAQ,CACtCE,YAAa,iBAEjB,CAkBWC,CAAOxB,EADC,IAAI,IAAIyB,IAAIX,EAAc/B,KAAKiC,GAAmBA,EAAK,OAC5CjB,GAAOtB,KAC/BC,GAAWgD,GACLA,EACK7B,GAAgB6B,EAAU5B,EAAOC,GAEnCZ,EAAG,QAGhB,CAEA,MAAMwC,EAAoC,CAAA,EACpC7B,EAAA8B,SAASZ,IACb,MAAOa,KAASC,GAAQd,EACbW,EAAAE,KACTF,EAAME,GAAQ,IAEhBF,EAAME,GAAME,KAAKD,EAAI,IAEjB,MAAAE,EAAOnD,OAAOC,KAAK6C,GAAOpC,QAAO,CAAC0C,EAA8BJ,KAC9D,MAAAK,EAAQP,EAAME,GAAMd,QAAQe,GAASA,EAAKb,OAAS,IACrD,OAAiB,IAAjBiB,EAAMjB,OACRgB,EAAIJ,GAAQM,EAAShE,GAAUA,EAAkC0D,QAAQ,EAEzEI,EAAIJ,GAAQhC,GAAiB1B,EAAc0D,GAAOK,EAAOnC,GAEpDkC,CAAA,GACN5B,GAEI,OAAAlB,EAAG6C,GAAMvD,KAAKL,GAAM,CAACgB,MAAM,IACpC,CA0CO,SAASgD,GAAqBhE,GAQnC,MAAM4B,GAACA,EAAAqC,UAAIA,EAAWC,KAAAA,GAAQlE,EACxBmE,EAAgBC,KACfC,EAAgBC,GAAqBC,EAAiChD,IAEvEiD,EAAWP,IAAmC,mBAAdA,EAA2BA,EAAYA,EAAUC,KAEhFO,EAAiBC,GAAsBH,EAC5CC,EAAW,YAAc,SAGrBG,EAASC,GAAQ,KACrB,GAAKJ,EAGL,CAAI,GAAoB,mBAAbA,EAAyB,CAG5B,MAAAK,EAAUL,EAFD,CAAC5C,KAAIsC,QACJ,CAACC,kBAEjB,OAAOvD,EAAaiE,GAAWA,EAAU9D,EAAG8D,EAC9C,CAGA,MAAI,WAAYL,GAAY,YAAaA,EAtE7C,SACEM,EACAN,EAKAL,GAEA,IAAKK,EAAiB,OAAAzD,OAAG,GACnB,MAAAa,GAACA,EAAIsC,KAAAA,GAAQY,EAEf,GAAoB,mBAAbN,EAAyB,CAI5B,MAAAK,EAAUL,EAHD,CAAC5C,KAAIsC,QAEJ,CAACC,kBAEjB,OAAOvD,EAAaiE,GAAWA,EAAU9D,EAAG8D,EAC9C,CAGI,GAAA,WAAYL,GAAY,YAAaA,EAAU,CACjD,MAAMO,OAACA,GAAUP,EAGV,OAAA/C,GADK,CAACW,MAAO,YAAaN,KAAMF,GADzBnB,OAAOuE,OAAOD,GAAQpE,KAAKZ,GAAUkF,OAAOlF,GAAOmF,MAAM,QAAS,GAE7Cf,GAAe9D,KAChDM,GAAKmE,GACIrE,OAAOC,KAAKqE,GAAQ5D,QAAgC,CAACC,EAAKtB,KAC/DsB,EAAItB,GAAOqF,EAAIL,EAAKC,EAAOjF,IACpBsB,IACN,CAAA,KAELT,EAAI6D,EAASY,SAEjB,CAGA,OAAOrE,EAAGyD,EACZ,CAiCaa,CAAoB,CAACzD,KAAIsC,QAAOM,EAAUL,GAI5CpD,EAAGyD,EAAQ,IACjB,CAACL,EAAevC,EAAI4C,EAAUN,IAEjC,OAAAoB,GAAU,KACR,MAAMC,EAAM,MAAAZ,OAAA,EAAAA,EAAQvE,WAAWoF,IAC7BlB,EAAkBkB,GAASjE,IAC3BmD,EAAmBc,EAAQ,WAAa,QAAO,IAGjD,MAAO,IAAW,MAALD,OAAK,EAAAA,EAAAE,gBACjB,CAACd,IAEG,CACLa,MAAOnB,EACPqB,OAAQjB,EAEZ,CCzLa,MAAAkB,GAA8B,eAO9BC,GAAoCC,EAA2B,CAC1EC,OAAQ,QACRC,UAAWJ,GACXK,UAAW,IAAMC,OAAO,oBCCbC,GAAsBC,EAA+C,MCd3E,SAASC,KACR,MAAAC,EAAeC,EAAWJ,IAEhC,IAAKG,EACG,MAAA,IAAIE,MAAM,mCAGX,OAAAF,CACT,CCaA,MAAMG,GAAyE,CAC7EC,SAAUC,EACVC,QAASC,EACTC,SAAUC,GAGL,SAASC,GAAgB/G,GAQ9B,MAAMgH,WAACA,EAAYC,YAAAA,EAAAhH,QAAaA,aAASiH,EAAYC,sBAAAA,GAAyBnH,GACxEwB,UAACA,EAAW4F,QAAAA,EAAAC,KAASA,GAAQrH,EAAMwF,MACnC8B,SAAM9F,WAAWqB,SAAU,GAE3B0E,EAACA,GAAKC,EAAe7B,IACrBU,EAAeC,EAAWJ,KACzBuB,EAAUC,GAAenD,GAAS,GACnCoD,EAASC,GAAY,KACpBN,GACLI,GAAaG,IAAOA,GAAC,GACpB,CAACP,IAEEQ,EAAQb,EACVM,EAAE,mCACFH,GAAWG,EAAE,mCAAoC,CAACQ,MAAOT,IAE7D,SACGU,EAAA,CAAKC,QAAS,EAAGC,OAAQ,EAAGC,QAAM,EAACd,OAClCe,WAAC,MAAI,CAAAC,MAAO,CAACC,QAAQ,GAClBF,SAAA,EAAC5G,KACC+G,EAAK,CAAAC,MAAM,aAAaC,IAAK,EAAGR,QAAS,EACvCG,SAAA,CAAAf,KACEqB,EAAA,CAAIC,KAAK,OACRP,WAACQ,EAAK,CAAAC,KAAM,EAAIT,SAAAU,EAActC,GAAWa,QAG5C0B,EAAAL,GAAIC,KAAM,EACTP,SAACY,EAAAJ,EAAK,CAAAC,KAAM,EAAGI,OAAO,SACnBb,SAAA,CAAAjB,GAA4B6B,EAAAE,EAAA,CAAAd,SAAA,CAAAnI,EAAQ6H,OAAS1I,GAAmB,SAChE0I,UAKRtG,GAEGwH,EAAAE,EAAA,CAAAd,SAAA,CAAAW,EAACf,EAAA,CACCmB,GAAI7B,EAAM,cAAW,EACrB8B,QAASzB,EACTM,QAAS,EACTC,OAAQ,EACRb,KAAK,UAELe,SAACY,EAAAT,EAAK,CAAAE,IAAK,EACTL,SAAA,CAAAW,EAACL,GAAIC,KAAK,OACPP,SACCnB,EAAC8B,EAAAM,GAAQR,KAAM,IAEdE,EAAAH,GAAKC,KAAM,EACTT,SAAQ,MACNW,EAAArC,MAEDqC,EAACO,EAAA,CACCjB,MAAO,CACLkB,UAAW,UAAU9B,EAAW,QAAU,KAC1C+B,WAAY,qCAOvBT,EAAAL,GAAIC,KAAM,EACTP,SAACY,EAAAJ,EAAK,CAAAC,KAAM,EAAGI,OAAO,SACnBb,SAAA,CAAAjB,GAA4B6B,EAAAE,EAAA,CAAAd,SAAA,CAAAnI,EAAQ6H,OAAS1I,GAAmB,SAChE0I,YAKRiB,EAAAU,EAAA,CAAMC,QAASjC,EAAUkC,UAAW,EAAGC,MAAO,EAC5CxB,SAAA5G,EAAUb,KAAI,CAACkJ,EAAGC,IACjBf,EAACgB,GAAA,CACCC,QACG/J,EAAQgK,MAAQ9K,aAAuBkH,WAAc4D,OACtDJ,EAAEK,QAAS,MAAA7D,OAAA,EAAAA,EAAcpD,OAAOkH,SAElCnD,aACAoD,aAAclD,EAAW+C,KAEzBI,KAAMR,EACNS,SAAUrK,EAAQgK,MAAQ9K,IAFrB2K,cAWvB,CAEA,SAASC,GAAa/J,GAOd,MAAAgH,WAACA,EAAYoD,aAAAA,EAAAC,KAAcA,EAAML,OAAAA,EAAAM,SAAQA,GAAYtK,EACrDqG,EAAeC,EAAWJ,IAE1BqE,EAAgBD,IC3IjB,WACD,IACF,OAAOlE,KAAsB6D,IAAA,CACvB,MACN,MACF,CACF,CDoIsCO,GAE9BC,EAAW,MAAApE,OAAA,EAAAA,EAAcoE,SAEzBC,EAAwBC,EAAc,CAC1CC,OAAQ,OACR3H,OAAQ,CACNrB,GAAIoF,EACJ9C,KAAMkG,EACNS,KAAM,eACNxE,aAAciE,KACG,MAAdjE,OAAc,EAAAA,EAAAyE,gBACjBX,QAASE,EAAKH,QAIZa,EAAyBnD,GAAY,KACzC,MAAA6C,GAAAA,EAAW,CAAC,EAAG,CAACN,QAASE,EAAKH,MAAI,GACjC,CAACG,EAAKH,KAAMO,IAGb,OAAA3B,EAACd,EAAA,IACMuC,EAAgB,CAAA,EAAKG,EAC1BvB,GAAG,IACHrJ,IAAKuK,EAAKH,KACVd,QAASmB,EAAgBQ,EAAyBL,EAAsBtB,QACxEnB,QAAS,EACTC,OAAQ,EACR8C,QAAShB,EACT3C,KAAK,WAEJ2B,EAAAT,EAAK,CAAAE,IAAK,EACTL,SAAA,GAACM,EAAA,CAAIC,KAAK,OACRP,WAACQ,EAAA,CAAKC,KAAM,EACVT,WAAC6C,EAAY,CAAA,SAGhBxB,EAAA,CAAMd,KAAM,EAAGiB,MAAO,EACrBxB,SAAA,CAAAW,EAACH,GAAKC,KAAM,EAAGI,OAAO,SACnBb,WAAKN,QAEPiB,EAAAH,GAAKsC,OAAK,EAACrC,KAAM,EAAGsC,aAAa,WAC/B/C,SAAAiC,EAAKH,aAMlB,CExLO,MAAMkB,GAA8BjF,EACzC,MCMIkF,GAAgBC,EAAO7B,EAAK;gBAClB8B,EAAI;;;;;EAOb,SAASC,GAA2BxL,GAnB3C,IAAAyL,EAwBE,MAAMzE,WAACA,EAAA/G,QAAYA,EAASiH,WAAAA,GAAclH,EAEpC0L,EAAUpF,EAAW8E,KACrB5F,MAACA,EAAOE,OAAAA,GAAU1B,GAAqB,CAC3CpC,GAAIoF,EACJ/C,WAAW,OAAAwH,EAAAxL,EAAQmF,cAAR,EAAAqG,EAAiBjK,YAAavB,EAAQ0L,OACjDzH,KAAMgD,EAAW+C,OAGnB,GAAKyB,GAAWA,EAAQzL,QAAQ,KAAOA,GAAuB,UAAXyF,EAC1C,OAAA,KAGH,MAAAkG,GAA0B,MAATF,OAAS,EAAAA,EAAAzL,UAAW,GAE3C,SACGoL,GAAA,CAAcQ,aAAc,EAAGjC,MAAO,EACrCxB,SAAAW,EAACU,EAAM,CAAAG,MAAO,EACXxB,SAAAwD,EAAejL,KAAI,CAACV,EAAS6L,IAC5B/C,EAAChC,GAAA,CACCC,aACAC,YAAwB,cAAXvB,EAEbzF,QAASA,EACTiH,aACAC,sBAAuByE,EAAe/I,OAAS,EAC/C2C,SAJKsG,QAUjB,CCxCO,SAASC,GAA6B/L,GAIrC,MAAAoI,SAACA,EAAUnI,QAAAA,GAAWD,EACtBgM,EAAS1F,EAAW8E,IACpBa,QAAiBD,WAAQE,UAExBC,EAAcC,GAAmB7H,GAAsC,IAAM,KAE9E2H,EAAWtE,GACd3H,GACKgM,EACKA,EAAehM,IAGxBmM,GAAiBC,GAAS,CAACpM,GAASqM,OAAOD,KAEpC,KACWD,GAACC,GAASA,EAAK1J,QAAQ4J,GAAMA,IAAMtM,KAAQ,IAG/D,CAACgM,IAGGO,EAAcC,EAAOP,GAC3BM,EAAYE,QAAUR,EAEtB,MAAMR,EAA4C9G,GAChD,KAAO,CACL3E,eAAS+L,WAAQ/L,UAAWkM,EAC5BD,cAEF,CAACC,EAAcH,EAAQE,IAGzB,OAAAS,GAAgB,IAAMH,EAAYE,QAAQzM,IAAU,CAACA,MAGlDmL,GAA4BwB,SAA5B,CAAqC7M,MAAO2L,EAC1CtD,YAGP,CC7CO,MAAMyE,GAAkBC,EAA0B,CACvD7C,KAAM,+BACN,SAAA8C,EAAU/F,WAACA,EAAYoD,aAAAA,EAAAxH,KAAcA,IACnC,MAAMoK,EAAYC,KACZC,eAACA,GAAkBC,IACnB9G,EAAeC,EAAWJ,IAE1BkH,EAAuBxI,GAC3B,IAsBN,SACEyI,EACArG,EACAoD,GA/CF,IAAAqB,EAiDE,MAAM6B,EAAUD,EAAM1M,KAAK4G,IAjD7BkE,IAAAA,EA4DW,MAAA,CAAC8B,KAAMhG,EAAGiG,MAVH,OAAA/B,EAAAlE,EAAEkG,wBAAFhC,EAAAiC,KAAAnG,EACZ,OACA,CACE3F,GAAIoF,EACJ9C,KAAMkG,EACNS,KAAM,aAER,CAAC,OAMC8C,EAAcL,EAAQ3K,QAAQ4E,GAAMxD,EAASwD,EAAEiG,QAAUjG,EAAEiG,MAAM3C,OAEvE,OAAI8C,EAAY9K,OAAS,EAChB8K,EAAY,GAAGJ,KAKjB,OAAA9B,EAFS6B,EAAQ3K,QAAQ4E,GAAMA,EAAEiG,QAEzB,SAAI,EAAA/B,EAAA8B,IACrB,CAlDYK,CAAkBZ,EAAUK,MAAOrG,EAAYoD,IACrD,CAACpD,EAAYoD,EAAc4C,EAAUK,QAGhC,MAAA,CACLnJ,KAAM,SACNwF,QAASrD,GAAgBzD,EAAKC,OAAS,IAAMuK,EAC7CS,YAAMT,WAAsBS,OAAQC,EACpChG,MAAO,YAAiC,MAAtBsF,OAAsB,EAAAA,EAAAtF,QAAS,cACjD,QAAAiG,GACEb,EAAe,OAAQ,CACrBtL,GAAIoF,EACJ9C,KAAMkG,EACNS,KAAM,YACNjI,KAAMoL,EAAapL,IAEvB,EACAqL,gBAAgB,EAEpB,IChCK,SAASC,GACdtD,EACA3H,EACAkL,EACAC,GAKM,MAAAxM,GAACA,OAAIiJ,EAAMjI,KAAAA,EAAAyD,aAAMA,OAAcnC,KAASmK,GAAgBpL,EAE1D,MAAW,SAAX2H,GAAqBhJ,EAChB,CACLsC,KAAMA,GAAQ,IACdtC,GAAI0M,EAAe1M,GACnBgB,OACA2L,cAAe9N,OAAO+N,QAAQH,IAInB,WAAXzD,GACFyD,EAAalE,QACXkE,EAAalE,SAAc,IAAIsE,gBAAgBC,OAAOC,SAASC,QAAQzJ,IAAI,YAAc,IAEvFiJ,GAA8B,iBAAZA,IACpBC,EAAaQ,eAAoBC,EAAiBV,IAG7C,CACLlK,KAAMA,GAAQ,IACdtC,GAAIA,GAAMmN,KACVR,cAAe9N,OAAO+N,QAAQH,KAG3B,CAACzD,SAAQ3H,SAAQmL,UAC1B,CC1CO,MAAMY,GAASC,EAAMC,OAAO,IAAK,CAACC,oCAAoC,GAAO,CAClFF,EAAMG,QAAQ,WACdH,EAAMC,OAAO,QAAS,CAACD,EAAMC,OAAO,MAAO,CAACD,EAAMC,OAAO,eCerDG,GAAmBC,GAAK,IAAMrJ,OAAO,2BACrCsJ,GAA6BD,GAAK,IAAMrJ,OAAO,qCAQ9C,SAASuJ,GACdhL,GAEO,OAAAA,CACT,CAQO,SAASiL,GAAgBxL,GACvB,OAAAA,CACT,CAEa,MAAAyL,GAAmBC,GAAyC1P,IA5CzE,IAAAwL,EA6CQ,MAAAnB,EAAWrK,EAAQgK,MAAQ9K,GAEjB,WAAAc,GAEd2P,QAAQC,KAAK,kFAGT,MAAAC,KAA0B,OAAArE,IAAQrG,UAARqG,EAAiBjK,WAAavB,EAAQ0L,QAqD/D,MAAA,CACLoE,KAAM,CACJC,QAAS,CAACpK,KAEZqK,SAAU,CACRC,sBAAwB7D,GACf,IACFA,EAAK1J,QAAQwN,GAAMA,EAAElG,OAAS4C,GAAgB5C,OACjD4C,KAKNuD,KAAM,CACJC,WAAY,CACVC,MAlEN,SAAmCtQ,GAC3B,MAAAD,EAAQC,EAAMD,MACdiH,QAAajH,KAAOgC,IAAMuM,EAAsB,MAAPvO,OAAO,EAAAA,EAAAgC,UAAO,EAEzD,OAAAwO,EAAqBvQ,EAAMkH,cAE1B6E,IAA6B9L,UAC3BmI,SAAA,CAAA0H,GAAwB9I,GACvB+B,EAACyC,GAAA,CACCxE,aACA/G,UACAiH,WAAYlH,EAAMkH,aAGrBlH,EAAMwQ,cAAcxQ,GACpB+I,EAAA0H,EACC,CAAArI,SAACW,EAAAwG,IAA4CxP,SAAZiH,IADrB,mCAObhH,EAAMwQ,cAAcxQ,EAC7B,IA+CEqN,MAAO,CACL,CACEQ,KAAM5N,EAAQ4N,MAAQ5O,GACtBgL,KAAMK,EACNxC,MAAO7H,EAAQ6H,MACf4I,UAAWrB,GACXpP,UACAwN,gBAAA,CAAgB7C,EAAQ3H,IACP,WAAX2H,EArDZ,SAA+B3H,GAM7B,MAJM,SAAUA,MAIZ,iBAAkBA,IAAUA,EAAOoD,eAAoBiE,OAIpD,aAAcrH,IAAS,CAAC0N,UAAU,GAC3C,CA0CwCC,CAAsB3N,GACvC,SAAX2H,GAzCZ,SAA6B3H,GAM3B,MAJM,SAAUA,GAAa,OAAQA,MAIjC,iBAAkBA,IAAUA,EAAOoD,eAAoBiE,OAIpD,SAAUrH,IAAS,CAAC4H,KAAM5H,EAAO4H,OAAYvL,IACtD,CA8BsCuR,CAAoB5N,GAGpDiL,kBACAc,YAEJ,ICpIS8B,GAA8B3K,EACzC,MCDK,SAAS4K,KACR,MAAAtG,EAAWnE,EAAWwK,IAE5B,IAAKrG,EACG,MAAA,IAAIlE,MAAM,4CAGX,OAAAkE,CACT,CCXa,MAAAuG,GAA4B7K,EAAyC,MCMlE,SAAA8K,GAAsBC,GAAwB,GACtD,MAAAjO,EAASqD,EAAW0K,IAE1B,GAAIE,IAA0BjO,EACtB,MAAA,IAAIsD,MAAM,0CAGX,OAAAtD,CACT"}