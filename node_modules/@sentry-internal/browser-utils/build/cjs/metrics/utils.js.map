{"version":3,"file":"utils.js","sources":["../../../src/metrics/utils.ts"],"sourcesContent":["import type { SentrySpan } from '@sentry/core';\nimport { spanToJSON, startInactiveSpan, withActiveSpan } from '@sentry/core';\nimport type { Span, SpanTimeInput, StartSpanOptions } from '@sentry/types';\nimport { WINDOW } from '../types';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nexport function isMeasurementValue(value: unknown): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function startAndEndSpan(\n  parentSpan: Span,\n  startTimeInSeconds: number,\n  endTime: SpanTimeInput,\n  { ...ctx }: StartSpanOptions,\n): Span | undefined {\n  const parentStartTime = spanToJSON(parentSpan).start_timestamp;\n  if (parentStartTime && parentStartTime > startTimeInSeconds) {\n    // We can only do this for SentrySpans...\n    if (typeof (parentSpan as Partial<SentrySpan>).updateStartTime === 'function') {\n      (parentSpan as SentrySpan).updateStartTime(startTimeInSeconds);\n    }\n  }\n\n  // The return value only exists for tests\n  return withActiveSpan(parentSpan, () => {\n    const span = startInactiveSpan({\n      startTime: startTimeInSeconds,\n      ...ctx,\n    });\n\n    if (span) {\n      span.end(endTime);\n    }\n\n    return span;\n  });\n}\n\n/** Get the browser performance API. */\nexport function getBrowserPerformanceAPI(): Performance | undefined {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nexport function msToSec(time: number): number {\n  return time / 1000;\n}\n"],"names":["spanToJSON","withActiveSpan","startInactiveSpan","WINDOW"],"mappings":";;;;;AAKA;AACA;AACA;AACO,SAAS,kBAAkB,CAAC,KAAK,EAA4B;AACpE,EAAE,OAAO,OAAO,KAAM,KAAI,YAAY,QAAQ,CAAC,KAAK,CAAC,CAAA;AACrD,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,eAAe;AAC/B,EAAE,UAAU;AACZ,EAAE,kBAAkB;AACpB,EAAE,OAAO;AACT,EAAE,EAAE,GAAG,GAAA,EAAK;AACZ,EAAoB;AACpB,EAAE,MAAM,kBAAkBA,eAAU,CAAC,UAAU,CAAC,CAAC,eAAe,CAAA;AAChE,EAAE,IAAI,eAAA,IAAmB,eAAgB,GAAE,kBAAkB,EAAE;AAC/D;AACA,IAAI,IAAI,OAAO,CAAC,UAAA,GAAmC,eAAA,KAAoB,UAAU,EAAE;AACnF,MAAM,CAAC,UAAW,GAAe,eAAe,CAAC,kBAAkB,CAAC,CAAA;AACpE,KAAI;AACJ,GAAE;AACF;AACA;AACA,EAAE,OAAOC,mBAAc,CAAC,UAAU,EAAE,MAAM;AAC1C,IAAI,MAAM,IAAA,GAAOC,sBAAiB,CAAC;AACnC,MAAM,SAAS,EAAE,kBAAkB;AACnC,MAAM,GAAG,GAAG;AACZ,KAAK,CAAC,CAAA;AACN;AACA,IAAI,IAAI,IAAI,EAAE;AACd,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;AACvB,KAAI;AACJ;AACA,IAAI,OAAO,IAAI,CAAA;AACf,GAAG,CAAC,CAAA;AACJ,CAAA;AACA;AACA;AACO,SAAS,wBAAwB,GAA4B;AACpE;AACA,EAAE,OAAOC,gBAAUA,YAAM,CAAC,gBAAiB,IAAGA,YAAM,CAAC,WAAW,CAAA;AAChE,CAAA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,OAAO,CAAC,IAAI,EAAkB;AAC9C,EAAE,OAAO,IAAK,GAAE,IAAI,CAAA;AACpB;;;;;;;"}